[1/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/MAX4466_Driver_Source.c.obj
[2/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/MAX4466_Driver_Demo.c.obj
[3/11] Performing build step for 'bootloader'
[1/1] cd /home/kbuntu/ESP32/MAX4466_Driver/build/bootloader/esp-idf/esptool_py && /home/kbuntu/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/kbuntu/ESP32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/kbuntu/ESP32/MAX4466_Driver/build/bootloader/bootloader.bin
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable MAX4466_Driver.elf
[7/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/kbuntu/ESP32/MAX4466_Driver/build/MAX4466_Driver.bin
[8/9] cd /home/kbuntu/ESP32/MAX4466_Driver/build/esp-idf/esptool_py && /home/kbuntu/.espressif/python_env/idf5.3_py3.12_env/bin/python /home/kbuntu/ESP32/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/kbuntu/ESP32/MAX4466_Driver/build/partition_table/partition-table.bin /home/kbuntu/ESP32/MAX4466_Driver/build/MAX4466_Driver.bin
MAX4466_Driver.bin binary size 0x2f9c0 bytes. Smallest app partition is 0x100000 bytes. 0xd0640 bytes (81%) free.
[8/9] cd /home/kbuntu/ESP32/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/kbuntu/ESP32/esp-idf -D "SERIAL_TOOL=/home/kbuntu/.espressif/python_env/idf5.3_py3.12_env/bin/python;;/home/kbuntu/ESP32/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/kbuntu/ESP32/MAX4466_Driver/build -P /home/kbuntu/ESP32/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 115200 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 MAX4466_Driver.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e8:6b:ea:cf:ca:3c
Uploading stub...
Running stub...
Stub running...
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16351...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16351 compressed) at 0x00001000 in 2.2 seconds (effective 98.2 kbit/s)...
Hash of data verified.
Compressed 195008 bytes to 103894...
Writing at 0x00010000... (14 %)
Writing at 0x0001ca60... (28 %)
Writing at 0x0002264f... (42 %)
Writing at 0x0002849a... (57 %)
Writing at 0x0002f40c... (71 %)
Writing at 0x000374c7... (85 %)
Writing at 0x0003d7aa... (100 %)
Wrote 195008 bytes (103894 compressed) at 0x00010000 in 9.3 seconds (effective 168.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 193.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
